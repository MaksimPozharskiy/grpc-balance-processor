services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations/001_initial_schema.up.sql:/docker-entrypoint-initdb.d/001_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 20

  app:
    build: .
    environment:
      DATABASE_DSN: ${DATABASE_DSN}
      GRPC_PORT: ${GRPC_PORT:-8080}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CANCEL_PERIOD_MIN: ${CANCEL_PERIOD_MIN:-5}
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8080:8080"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  pgdata:
